# Application name for identification
spring.application.name=Sticky_notes

# Use PORT environment variable for Cloud Run with fallback to 8082 for local development
server.port=${PORT:8082}

# Database connection settings
# Use environment variables for Cloud Run, fallback to defaults for local development
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/deividasstropus}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:postgres}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:admin}
spring.datasource.driver-class-name=org.postgresql.Driver

# Hibernate and JPA settings for PostgreSQL
# Configure Hibernate dialect for PostgreSQL
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
# Be cautious with this setting in production; consider using 'validate' or 'none' for production
spring.jpa.hibernate.ddl-auto=update
# Show SQL queries in the logs (useful for debugging)
spring.jpa.show-sql=true

# HikariCP (connection pool) settings for optimal performance
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.minimum-idle=2

# Cloud Run and local environment configurations
# Health and info endpoints for monitoring
management.endpoint.health.show-details=always
management.endpoints.web.exposure.include=health,info

# Optional additional configuration (for Cloud Run or other environments)
# If you plan to use Spring profiles (e.g., for Cloud Run), you can set them here:
# spring.profiles.active=cloud-run

# Logging settings for better visibility in Cloud Run (optional)
logging.level.org.springframework.web=INFO
logging.level.org.hibernate=ERROR

# CORS Configuration
# Disable Spring's CORS handling as we're using a custom filter
spring.web.cors.enabled=false
